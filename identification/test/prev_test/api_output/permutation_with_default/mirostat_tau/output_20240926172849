mirostat=2, mirostat_eta=0.1, mirostat_tau=9.0
num_ctx=4608, repeat_last_n=64, repeat_penalty=1.1
temperature=0.8, seed=0, tfs_z=1.0, num_predict=512
top_k=40, top_p=0.9, min_p=0.0

==================== Generated Output ====================
Here is the list of hyperparameters related to `flash_attn_2_cuda`:

```json
{
  "window_size": "A tuple of two integers that determines the sliding window size for local attention in flash_attn_qkvpacked_func and _flash_attn_forward. It's used to implement sliding window local attention.",
  "alibi_slopes": "A tuple of floats or a float array that determines the slope of alibi bias in flash_attn_qkvpacked_func.",
  "softmax_scale": "A float value that scales QK^T before applying softmax in flash_attn_qkvpacked_func. It's set to 1 / sqrt(headdim) by default.",
  "qkv_shape": "[batch_size, seqlen, 3, nheads, headdim] The shape of the input tensor qkv in _flash_attn_backward and flash_attn_cuda.fwd.",
  "dropout_p": "A float value that determines the probability of dropping out a fraction of attention scores in flash_attn_qkvpacked_func.",
  "batch_size": "An integer value that determines the minibatch size in time_fwd_bwd, flops, benchmarks.benchmark_flash_attention/benchmarks.benchmark_flash_attention.time_f_b -> benchmarks.benchmark_flash_attention/benchmarks.benchmark_flash_attention.time_b -> benchmarks.benchmark_flash_attention/benchmarks.benchmark_flash_attention.b -> ... -> flash_attn.flash_attn_interface.FlashAttnQKVPackedFunc.apply -> ...",
  "q": "[batch_size, nheads, seqlen] The shape of the input tensor q in _flash_attn_forward and flash_attn_cuda.fwd.",
  "k": "[batch_size, nheads, seqlen] The shape of the input tensor k in _flash_attn_forward and flash_attn_cuda.fwd.",
  "v": "[batch_size, nheads, seqlen] The shape of the input tensor v in _flash_attn_forward and flash_attn_cuda.fwd.",
  "out_shape": "[batch_size, nheads, headdim] The shape of the output tensor out in _flash_attn_forward and flash_attn_cuda.fwd."
}
```

