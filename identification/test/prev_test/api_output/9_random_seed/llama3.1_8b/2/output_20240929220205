mirostat=0, mirostat_eta=0.1, mirostat_tau=5.0
num_ctx=4608, num_keep=5, repeat_last_n=64, repeat_penalty=1.2
temperature=1.0, seed=-1, tfs_z=1.0, num_predict=-1
top_k=40, top_p=0.9, min_p=0.4

==================== Generated Output ====================
{ 
    "qkv_shape": "(batch_size, seqlen, 3, nheads, headdim) - The input tensor shape to flash_attn_2_cuda.",
    "dropout_p": "0.0 - Dropout probability for attention mechanism in flash_attn_qkvpacked_func and _flash_attn_forward.",
    "softmax_scale": "(1 / sqrt(headdim)) - Scaling factor of QK^T before softmax operation in flash_attn_qkvpacked_func",
    "causal": "False - Whether to apply causal attention mask for auto-regressive modeling in flash_attn_qkvpacked_func and _flash_attn_forward.",
    "window_size": "(left, right) - If not (-1, -1), implements sliding window local attention. In flash_attn_qkvpacked_func",
    "alibi_slopes": "(nheads,) or (batch_size, nheads) - Bias of (-alibi_slope * |i - j|) added to the attention score in flash_attn_qkvpacked_func.",
    "deterministic": "False - Whether to use deterministic implementation for backward pass. In FlashAttnQKVPackedFunc",
    "return_softmax": "True (if dropout_p > 0 and return_attn_probs=True) - Return softmax probabilities of attention mechanism in flash_attn_qkvpacked_func.",
    "nheads": "(dim // headdim) - Number of heads for multi-head self-attention. In time_fwd_bwd, benchmarks.benchmark_flash_attention/benchmarks.benchmark_flash_attention.time_f_b",
    "headdim_vals": "[64, 128] - List of possible values for head dimension in flash_attn_qkvpacked_func and _flash_attn_forward.",
    "dim": "2048 - Dimensionality of the input sequence. In time_fwd_bwd, benchmarks.benchmark_flash_attention/benchmarks.benchmark_flash_attention.time_f_b",
    "batch_size": "[32, 16, 8, 4, 2, 1] - List of possible batch sizes for benchmarking flash attention in time_fwd_bwd.",
    "seqlen_vals": "[512, 1024, 2048, 4096, 8192, 16384] - List of possible sequence lengths for benchmarking flash attention. In benchmarks.benchmark_flash_attention/benchmarks.benchmark_flash_attention.time_f_b"
}

